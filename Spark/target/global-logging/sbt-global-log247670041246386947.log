[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Private Build Java 11.0.11-ea)
[debug]       Load.loadUnit: plugins took 309.611281ms
[debug]       Load.loadUnit: defsScala took 0.491924ms
[debug] [Loading] Scanning directory /home/crsl/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/crsl/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 53.140738 ms
[debug]           Load.resolveProject(global-plugins) took 128.705009ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/crsl/.sbt/1.0/plugins, plugins: List(<none>))) took 238.552056ms
[debug] [Loading] Done in /home/crsl/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 312.374448ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.494353ms
[debug]     Load.loadUnit(file:/home/crsl/.sbt/1.0/plugins/, ...) took 658.118441ms
[debug]   Load.apply: load took 1184.484868ms
[debug]   Load.apply: resolveProjects took 20.560065ms
[debug]   Load.apply: finalTransforms took 492.505914ms
[debug]   Load.apply: config.delegates took 236.447032ms
[debug]   Load.apply: Def.make(settings)... took 7231.320294ms
[debug]   Load.apply: structureIndex took 2115.856632ms
[debug]   Load.apply: mkStreams took 48.568558ms
[info] loading global plugins from /home/crsl/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 38170.055146ms
[debug]           Load.loadUnit: plugins took 179.549001ms
[debug]           Load.loadUnit: defsScala took 0.021468ms
[debug] [Loading] Scanning directory /home/crsl/Desktop/CloudComputing/Spark/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/crsl/Desktop/CloudComputing/Spark/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 60.847715 ms
[debug]               Load.resolveProject(spark-build) took 17.303399ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spark-build, base: /home/crsl/Desktop/CloudComputing/Spark/project, plugins: List(<none>))) took 87.771665ms
[debug] [Loading] Done in /home/crsl/Desktop/CloudComputing/Spark/project, returning: (spark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 97.237958ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.044619ms
[debug]         Load.loadUnit(file:/home/crsl/Desktop/CloudComputing/Spark/project/, ...) took 279.545539ms
[debug]       Load.apply: load took 289.841877ms
[debug]       Load.apply: resolveProjects took 0.890601ms
[debug]       Load.apply: finalTransforms took 96.025226ms
[debug]       Load.apply: config.delegates took 1.94587ms
[debug]       Load.apply: Def.make(settings)... took 441.699967ms
[debug]       Load.apply: structureIndex took 144.147411ms
[debug]       Load.apply: mkStreams took 0.026779ms
[info] loading project definition from /home/crsl/Desktop/CloudComputing/Spark/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3011.341519ms
[debug]     Load.loadUnit: defsScala took 0.035298ms
[debug] [Loading] Scanning directory /home/crsl/Desktop/CloudComputing/Spark
[debug]       Load.loadUnit: mkEval took 53.425476ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/crsl/Desktop/CloudComputing/Spark, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.829248 ms
[info] loading settings for project spark from build.sbt ...
[debug]         Load.resolveProject(spark) took 10.138278ms
[debug]       Load.loadTransitive: finalizeProject(Project(id spark, base: /home/crsl/Desktop/CloudComputing/Spark, plugins: List(<none>))) took 19.641005ms
[debug] [Loading] Done in /home/crsl/Desktop/CloudComputing/Spark, returning: (spark)
[debug]     Load.loadUnit: loadedProjectsRaw took 13335.627312ms
[debug]     Load.loadUnit: cleanEvalClasses took 33.728902ms
[debug]   Load.loadUnit(file:/home/crsl/Desktop/CloudComputing/Spark/, ...) took 16390.289237ms
[debug] Load.apply: load took 16396.449475ms
[debug] Load.apply: resolveProjects took 0.596234ms
[debug] Load.apply: finalTransforms took 50.38458ms
[debug] Load.apply: config.delegates took 13.688522ms
[debug] Load.apply: Def.make(settings)... took 1006.890437ms
[debug] Load.apply: structureIndex took 95.333594ms
[debug] Load.apply: mkStreams took 0.004433ms
[info] set current project to Spark (in build file:/home/crsl/Desktop/CloudComputing/Spark/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/crsl/.sbt/1.0/server/7552515d06c3c5f5e5eb/sock
[info] started sbt server
